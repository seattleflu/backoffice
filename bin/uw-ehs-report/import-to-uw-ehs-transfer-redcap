#!/usr/bin/env python3
import argparse
import os
import json
import math
import numpy as np
import pandas as pd
import requests
import logging
from sys import stderr
from typing import Any, Dict

LOG_LEVEL = os.environ.get("LOG_LEVEL", "debug").upper()

logging.basicConfig(
    level = logging.ERROR,
    format = "[%(asctime)s] %(levelname)-8s %(message)s",
    datefmt = "%Y-%m-%d %H:%M:%S%z",
    stream = stderr)

logging.captureWarnings(True)

log = logging.getLogger(__name__)
log.setLevel(LOG_LEVEL)

def post_to_redcap(json_content: str) -> Any:
    """
    POST request to the REDCap API to import REDCap *content*.
    Requires environment variables REDCAP_API_URL and REDCAP_API_TOKEN.
    """
    REDCAP_API_TOKEN_EHS_TRANSFER_UW = os.environ['REDCAP_API_TOKEN_EHS_TRANSFER_UW']
    REDCAP_API_URL = os.environ['REDCAP_API_URL']

    data = {
        'token': REDCAP_API_TOKEN_EHS_TRANSFER_UW,
        'content': 'record',
        'format': 'json',
        'type': 'flat',
        'overwriteBehavior': 'overwrite',
        'forceAutoNumber': 'false',
        'dateFormat': 'MDY',
        'data': json_content,
        'returnContent': 'ids',
        'returnFormat': 'json'
    }

    response = requests.post(REDCAP_API_URL, data=data)
    response.raise_for_status()

    if len(response.json()) == 0:
        log.warn("The response from posting to the REDCap transfer project was empty.")
        return None

    return response.json()


# Import UW reopening records into the EHS Transfer REDCap project (#24025)
if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description= __doc__,
        formatter_class=argparse.RawTextHelpFormatter
    )

    parser.add_argument("filename",
        metavar="<input-file.csv>",
        help="An CSV file containing the data to import into EHS REDCap project")

    args = parser.parse_args()

    if not os.environ.get('REDCAP_API_TOKEN_EHS_TRANSFER_UW') or not os.environ.get('REDCAP_API_URL'):
        log.error("The REDCAP_API_TOKEN_EHS_TRANSFER_UW and REDCAP_API_URL env vars must be set.")
    else:
        ehs_dataset = pd.read_csv(args.filename)

        # Post data to REDCap in batches of 10000 records to reduce strain on REDCap servers
        ehs_dataset_num_rows = ehs_dataset.shape[0]
        redcap_post_batch_size = 10000
        num_batches = math.ceil(ehs_dataset_num_rows / redcap_post_batch_size)

        for batch in np.array_split(ehs_dataset, num_batches):
            post_to_redcap(batch.to_json(orient='records'))
