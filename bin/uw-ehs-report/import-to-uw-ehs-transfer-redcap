#!/usr/bin/env python3
import argparse
import os
import math
import logging
import id3c.cli.redcap as redcap
from id3c.json import load_ndjson
from more_itertools import chunked
from sys import stderr
from typing import Any, Dict

LOG_LEVEL = os.environ.get("LOG_LEVEL", "debug").upper()

logging.basicConfig(
    level = logging.ERROR,
    format = "[%(asctime)s] %(levelname)-8s %(message)s",
    datefmt = "%Y-%m-%d %H:%M:%S%z",
    stream = stderr)

logging.captureWarnings(True)

log = logging.getLogger(__name__)
log.setLevel(LOG_LEVEL)


# Import UW reopening records into the EHS Transfer REDCap project (#24025)
if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description= __doc__,
        formatter_class=argparse.RawTextHelpFormatter
    )

    parser.add_argument("input",
        metavar="<input-file.ndjson>",
        type=argparse.FileType("r"),
        help="An NDJSON file containing the data to import into EHS REDCap project")

    args = parser.parse_args()

    project = redcap.Project("https://redcap.iths.org", 24025)

    # Post data to REDCap in batches of 8,500 records to reduce strain on REDCap servers
    redcap_post_batch_size = 8500

    for batch in chunked(load_ndjson(args.input), redcap_post_batch_size):
        project.update_records(batch, date_format = "MDY", check_count = False)
