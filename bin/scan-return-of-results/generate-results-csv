#!/bin/bash
# usage: generate-results-csv
#        generate-results-csv --help
#
# Joins REDCap SCAN data and the SCAN return of results view in ID3C. Parses
# these data into a format appropriate for UW Lab Med's results portal.
#
# Resulting transformed csv is output to stdout.
#
set -euo pipefail

: "${REDCAP_API_URL:?The REDCAP_API_URL environment variable is required.}"
: "${REDCAP_API_TOKEN_EN:?The REDCAP_API_TOKEN_EN environment variable is required.}"

main() {
    for arg; do
        case "$arg" in
            --help)
                print-help
                exit 0;;
        esac
    done

    # Change to the ./bin/scan-return-of-results directory in the backoffice checkout
    cd "$(dirname "$0")"

    ./transform <(export-redcap-data) <(./export-id3c-scan-return-results)
}

# Exports data using all given REDCap project API tokens, output as one csv.
# The first export keeps the header, all subsequent ones skip it.
export-redcap-data() {
    REDCAP_API_TOKEN="$REDCAP_API_TOKEN_EN" ./export-redcap-scan
    REDCAP_API_TOKEN="$REDCAP_API_TOKEN_ES" ./export-redcap-scan | tail -n +2
    REDCAP_API_TOKEN="$REDCAP_API_TOKEN_VI" ./export-redcap-scan | tail -n +2
    REDCAP_API_TOKEN="$REDCAP_API_TOKEN_ZH_HANS" ./export-redcap-scan | tail -n +2
}

print-help() {
    # Print the help comments at the top of this file ($0)
    local line
    while read -r line; do
        if [[ $line =~ ^#! ]]; then
            continue
        elif [[ $line =~ ^# ]]; then
            line="${line/##/}"
            line="${line/# /}"
            echo "$line"
        else
            break
        fi
    done < "$0"
}

main "$@"
