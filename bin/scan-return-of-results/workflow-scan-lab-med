#!/bin/bash
# usage: workflow-scan-lab-med
#        workflow-scan-lab-med --help
#
# Joins REDCap SCAN data and the SCAN return of results view in ID3C. Parses
# these data into a format appropriate for UW Lab Med's results portal.
#
# Resulting transformed csv is by default stored at:
#    s3://dokku-stack-phi/covid19/scan-study-inbound/scan_return_results.csv
#
set -euo pipefail

: "${REDCAP_API_URL:?The REDCAP_API_URL environment variable is required.}"
: "${REDCAP_API_TOKEN_EN:?The REDCAP_API_TOKEN_EN environment variable is required.}"
: "${REDCAP_API_TOKEN_ES:?The REDCAP_API_TOKEN_ES environment variable is required.}"

main() {
    for arg; do
        case "$arg" in
            --help)
                print-help
                exit 0;;
        esac
    done

    # Change to the ./bin/scan-return-of-results directory in the backoffice checkout
    cd "$(dirname "$0")"

    local redcap_project_tokens=("$REDCAP_API_TOKEN_EN" "$REDCAP_API_TOKEN_ES")
    ./transform <(export-redcap-data) <(./export-id3c-scan-return-results)
}

# Exports data using all given REDCap project API tokens, output as one csv.
export-redcap-data() {
    local redcap_fields="participant_first_name,participant_last_name,birthday,return_utm_barcode,contacted"
    # Create csv file with headers only
    echo $redcap_fields

    for token in "${redcap_project_tokens[@]}"; do
        ./export-redcap-scan "$redcap_fields" "$token"
    done;
}

print-help() {
    # Print the help comments at the top of this file ($0)
    local line
    while read -r line; do
        if [[ $line =~ ^#! ]]; then
            continue
        elif [[ $line =~ ^# ]]; then
            line="${line/##/}"
            line="${line/# /}"
            echo "$line"
        else
            break
        fi
    done < "$0"
}

main "$@"
