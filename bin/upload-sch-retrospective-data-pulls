#!/bin/bash
# usage: ./export/sch-retrospective-data-pulls
#
# Parses and uploads SCH retrospective data from AWS to ID3C.
#

set -euo pipefail

: ${ID3C:="$(dirname "0")"/../id3c-production}
: ${id3c:=pipenv run id3c}

export PIPENV_PIPFILE="$ID3C/Pipfile"

main() {
    local UPLOAD=0

    for arg; do
        case "$arg" in
            -h|--help)
                print-help
                exit
                ;;
            --upload)
                UPLOAD=1
                shift
                break
                ;;
            *)
        esac
    done

    if [[ $# -gt 0 ]]; then
        echo "Error: extra arguments provided; aborting out of an abundance of caution." >&2
        echo
        print-help
        exit 1
    fi

    cd "$(dirname "$0")"
    workdir="$(pwd)"

    datadir="$(mktemp -d -t sch-retrospective-data-pulls-XXXXXX)"
    cd $datadir

    # Always leave and delete this temporary directory regardless of exit code
    trap "cd '$workdir' && rm -rf '$datadir'" EXIT

    echo "Downloading the most recent Year2 SCH data from AWS S3"
    # Do not include SFS Year2 Main Data files prior to 2020. After the last
    # SCH data upload of 2019, the column naming scheme changed. The CLI command
    # was then changed, now causing earlier data pulls to fail on parsing.
    aws s3 cp --recursive s3://fh-pi-bedford-t/seattleflu/sch/ . --exclude "*" \
        --include "SFS_Year2_Main_Data_2020*.csv" \
        --include "SFS_Year2_Main_Data_2020*.ndjson"
    echo

    for retrospective_data_file in *.csv
    do
        filename=$(basename "$retrospective_data_file" .csv)
        echo "Checking for parsed retrospective data matching Â«$filenameÂ»"
        if [[ -e "$filename".ndjson ]]; then
            echo "Parsed data found. Continuing"
            echo
            continue
        fi

        echo "No parsed data found. Parsing now"
        cd $workdir
        echo
        if ! $id3c clinical parse-sch "$datadir/$filename".csv > "$datadir/$filename".ndjson; then
            echo "Something went wrong when parsing the retrospective data"
            exit 1
        fi
        echo "Finished parsing new SCH retrospective data"

        if [[ $UPLOAD -eq 1 ]]; then
            echo "Uploading the parsed records to ID3C"
            $id3c clinical upload "$datadir/$filename".ndjson
            echo

            echo "Uploading the parsed records to S3"
            aws s3 cp "$datadir/$filename".ndjson s3://fh-pi-bedford-t/seattleflu/sch/
            echo

            echo "Finished uploading new SCH retrospective data"
        fi

    done


}

print-help() {
    # Print the help comments at the top of this file ($0)
    perl -MEnglish -ne '
        s/^# ?// or exit;
        print if $INPUT_LINE_NUMBER >= 2;
    ' "$0"
}

main "$@"
